{
  "setSwapFeePercentage(uint256)": "Authorize change of swap fees for pools that delegate ownership to Balancer Governance: 0xba1ba1...",
  "startAmplificationParameterUpdate(uint256,uint256)": "Start ramping up or down the A factor of a stableswap pool that delegated ownership to Balancer Governance: 0xba1ba1...",
  "stopAmplificationParameterUpdate()": "Stop A-factor change leaving the A-Factor at its currently set value on a stableswap pool that delegated ownership to Balancer Governance: 0xba1ba1...",
  "pause()": "Stops trading in a pool.  Proportinal withdraws are still possible.",
  "disable()": "Disables new creation of pools from a pool factory.",
  "enableRecoveryMode()": "Puts a pool into [Recovery Mode](https://medium.com/@0xSkly/inside-balancer-code-recoverymode-9af34ce5ab72)",
  "setTargets(uint256,uint256)": "Allows setting the targets of the linear pools. Targets determine the ideal amount of unwrapped tokens.",
  "exitPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "Remove liquidity from a pool on the user's behalf.",
  "joinPool(bytes32,address,address,(address[],uint256[],bytes,bool))": "Add liquidity to a pool on the user's behalf.",
  "batchSwap(uint8,(bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),int256[],uint256)": "Make a multihop trade or source liquidity from multiple pools.",
  "manageUserBalance((uint8,address,uint256,address,address)[])": "Utilize existing Vault allowances and internal balances so that a user does not have to re-approve the new relayer for each token.",
  "setRelayerApproval(address,address,bool)": "Approve the relayer on the user's behalf (user must still provide a signed message).",
  "swap((bytes32,uint8,address,address,uint256,bytes),(address,bool,address,bool),uint256,uint256)": "Trade within a single pool on the user's behalf.",
  "withdrawCollectedFees(address[],uint256[],address)": "Allows the withdrawal of collected protocol fees",
  "setSwapFeePercentage(uint256)": "Sets the protocol fee charged on swaps for this deployment -on vault deployments",
  "setFlashLoanFeePercentage(uint256)": "Sets the protocol fee charged on flash loans for this deployment",
  "setPaused(bool)": "Stops all trading activity involving the vault",
  "notify_reward_amount(address)": "Begins a seven day distribution of token rewards",
  "setFeeTypePercentage(uint256,uint256)": "Sets the protocol fee for a particular fee type for this deployment",
  "addTokenToGauge(address,address,address)": "Whitelists a new token to be used as a reward token for a particular gauge",
  "denylistToken(address)": "Adds a token to the ProtocolFeeWithdrawer deny list which prevents the withdrawal of that token from the ProtocolFeeCollector"
}
