name: Merge JSON payloads

on:
  workflow_dispatch:
    inputs:
      runWeek:
        description: 'The week to run on like YYYY-W##, should match a directory in BIPs/'
        required: true

jobs:
  json_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Run script with JSON files
        run: |
          pip3 install -r action-scripts/requirements-actions.txt
          python action-scripts/merge_pr_jsons.py --target BIPs/${{ github.event.inputs.runWeek }}
          npm install --save-dev --save-exact prettier
          npx prettier --write BIPs/00batched/**/*.json
          rm -rf node_modules
          rm package-lock.json
          rm package.json
      - name: Create PR
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Combined JSON Payloads ${{ github.event.inputs.directory }}"
          title: "Combined JSON payloads"
          reviewers: "solarcurvey"
          assignees: "solarcurvey"
          labels: "Gauge Payloads, Merged Payloads"
        env:
          PR_NUMBER: ${{ steps.cpr.outputs.pull-request-number }}
          COMMIT_SHA: ${{ steps.cpr.outputs.pull-request-head-sha }}
      - name: Run report script
        env:
          WEB3_INFURA_PROJECT_ID: ${{ secrets.WEB3_INFURA_PROJECT_ID }}
          ETHERSCAN_TOKEN: ${{ secrets.ETHERSCAN_TOKEN }}
          ARBISCAN_TOKEN: ${{ secrets.ARBISCAN_TOKEN }}
          GNOSISSCAN_TOKEN: ${{ secrets.GNOSISSCAN_TOKEN }}
          POLYGONSCAN_TOKEN: ${{ secrets.POLYGONSCAN_TOKEN }}
          OPTIMISMSCAN_TOKEN: ${{ secrets.OPTIMISMSCAN_TOKEN }}
          ZKEVMSCAN_TOKEN: ${{ secrets.ZKEVMSCAN_TOKEN }}
        run: |
          cd action-scripts/brownie
          touch .env
          pip install -r requirements-actions.txt
          brownie run --network mainnet scripts/report_gauges.py
          REPORT=`cat output.txt`
          echo output.txt "::set-output name=report-data::$REPORT"
      - name: Post Report as Comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: action-scripts/brownie/output.txt
          pr_number: ${{ steps.cpr.outputs.pull-request-number }}
          reactions: eyes